{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build (Testing)",
            "group": "build",
            "type": "shell",
            "command": "echo",
            "args": [
                "Building ${input:contract.group} for \\033[1;32mtesting\\033[0;37m",
                "&&",
                "eosio-cpp",
                "-D'TESTING'",
                "-o=${input:contract.name}.wasm",
                "-abigen",
                "-w",
                "-I=${workspaceFolder}/includes",
                "${input:contract.optional}",
                "${workspaceFolder}/contracts/${input:contract.name}.cpp"
            ],
            "options": {
                "cwd": "${workspaceFolder}/binaries/testing"
            },
            "problemMatcher": []
        },
        {
            "label": "Build (Production)",
            "group": "build",
            "type": "shell",
            "command": "echo",
            "args": [
                "Building ${input:contract.group} for \\033[1;31mproduction\\033[0;37m",
                "&&",
                "eosio-cpp",
                "-o=${input:contract.name}.wasm",
                "-abigen",
                "-w",
                "-I=${workspaceFolder}/includes",
                "${input:contract.optional}",
                "${workspaceFolder}/contracts/${input:contract.name}.cpp"
            ],
            "options": {
                "cwd": "${workspaceFolder}/binaries/production"
            },
            "problemMatcher": []
        },
        {
            "label": "Deploy (Testing)",
            "group": "none",
            "type": "shell",
            "command": "echo",
            "args": [
                "Deploying ${input:contract.group} to \\033[1;32mtesting\\033[0;37m",
                "&&",
                "cleos",
                "-u",
                // "https://testnet.wax.pink.gg",
                "https://api.waxtest.alohaeos.com",
                "set",
                "contract",
                "${input:contract.testing}",
                "${workspaceFolder}/binaries/testing",
                "${input:contract.name}.wasm",
                "${input:contract.name}.abi"
            ],
            "dependsOn": [
                "Unlock"
            ],
            "dependsOrder": "sequence",
            "problemMatcher": []
        },
        {
            "label": "Deploy (Production)",
            "group": "none",
            "type": "shell",
            "command": "echo",
            "args": [
                "Deploying ${input:contract.group} to \\033[1;31mproduction\\033[0;37m",
                "&&",
                "cleos",
                "-u",
                "https://wax.greymass.com",
                "set",
                "contract",
                "${input:contract.production}",
                "${workspaceFolder}/binaries/production",
                "${input:contract.name}.wasm",
                "${input:contract.name}.abi",
                "--permission",
                "${input:contract.production}@deploy"
            ],
            "dependsOn": [
                "Unlock"
            ],
            "dependsOrder": "sequence",
            "problemMatcher": []
        },
        {
            "label": "Create wallet",
            "type": "shell",
            "command": "sh",
            "args": [
                "shellscripts/init-wallet.sh"
            ],
            "presentation": {
                "echo": false,
                "reveal": "never",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Unlock",
            "type": "shell",
            "command": "cleos",
            "args": [
                "wallet",
                "unlock",
                "--password",
                "insert-your-keosd-password-here",
                "||",
                "true"
            ],
            "presentation": {
                "echo": false,
                "reveal": "never",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Import",
            "type": "shell",
            "command": "cleos",
            "args": [
                "wallet",
                "import",
                "--private-key",
                "${input:private-key}"
            ],
            "presentation": {
                "echo": false,
                "reveal": "never",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            },
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "private-key",
            "type": "promptString",
            "description": "Enter your private key",
            "password": true
        },
        {
            "id": "contract.group",
            "type": "command",
            "command": "extension.commandvariable.pickStringRemember",
            "args": {
                "description": "Pick the contract to deploy",
                "key": "name",
                "options": [
                    [
                        "BAP",
                        {
                            "name": "bap",
                            "testing": "",
                            "production": "",
                            "optional": "${workspaceFolder}/contracts/random-provider.cpp"
                        }
                    ]
                ]
            }
        },
        {
            "id": "contract.name",
            "type": "command",
            "command": "extension.commandvariable.remember",
            "args": {
                "key": "name"
            }
        },
        {
            "id": "contract.testing",
            "type": "command",
            "command": "extension.commandvariable.remember",
            "args": {
                "key": "testing"
            }
        },
        {
            "id": "contract.production",
            "type": "command",
            "command": "extension.commandvariable.remember",
            "args": {
                "key": "production"
            }
        },
        {
            "id": "contract.optional",
            "type": "command",
            "command": "extension.commandvariable.remember",
            "args": {
                "key": "optional"
            }
        }
    ]
}